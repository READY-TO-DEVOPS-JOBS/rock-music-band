pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('Docker-cred')
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clean Environment') {
            steps {
                sh 'docker system prune -fa || true'
            }
        } 
        
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/READY-TO-DEVOPS-JOBS/rock-music-band.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    dir('node-ex-website') {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Login to DockerHub') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        // Remove the Test stage if not using tests
        stage('Run Tests') {
            steps {
                script {
                    dir('node-ex-website') {
                        sh 'npm test'
                    }
                }
            }
        }

        stage('File System Scan') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('node-ex-website') {
                    sh 'docker build -t bulawesley/rock-music-band:v$BUILD_NUMBER .'
                }
            }
        }

        stage('Docker Image Scan') {
            steps {
                sh "trivy image --format table -o trivy-image-report.html bulawesley/rock-music-band:v$BUILD_NUMBER"
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push bulawesley/rock-music-band:v$BUILD_NUMBER'
            }
        }

        stage('Deploy Application') {
            steps {
                script {
                    sh '''
                        docker stop rock-music-band || true
                        docker rm rock-music-band || true
                        docker run -d \
                        --name rock-music-band \
                        -p 4565:3000\
                        bulawesley/rock-music-band:v$BUILD_NUMBER
                    '''
                }
            }
        }

        stage('helm-charts') {
            steps {
                script {
                    sh '''
                        rm -rf rock-music-band  || true
                        git clone https://github.com/READY-TO-DEVOPS-JOBS/rock-music-band.git
                        cd rock-music-band 

                        cat << EOF > values.yaml
                        repository:
                          tag:  v$BUILD_NUMBER
                          assets:
                            image: bulawesley/rock-music-band
                        EOF

                        cat values.yaml
                        git add -A
                        git commit -m "Change from Jenkins build ${BUILD_NUMBER}"
                        git push 
                    '''
                }
            }
        }

        stage('Display Server IP') {
            steps {
                sh 'curl ifconfig.io'
            }
        }
    }
}
